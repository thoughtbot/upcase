#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/boot'
require 'rubygems'
require 'activesupport'
require 'pathname'
require 'digest/md5'

project_name = ARGV[0]
fail("Usage:  #{File.basename(__FILE__)} new_project_name")     unless project_name
fail("Project name must only contain [a-z0-9_]")                unless project_name =~ /^[a-z0-9_]+$/

base_directory = Pathname.new(File.join(File.dirname(__FILE__), '..', '..')).realpath
project_directory = base_directory + project_name
fail("Project directory (#{project_directory}) already exists") if project_directory.exist?

template_url = "git://github.com/thoughtbot/suspenders.git"
changeme = "CHANGEME"
changesession = "CHANGESESSION"

def run(cmd)
  puts "Running '#{cmd}'"
  out = `#{cmd}`
  if $? != 0 
    fail "Command #{cmd} failed: #$?\n#{out}" 
  end
  out
end

def search_and_replace(file, search, replace)
  if File.file?(file)
    contents = File.read(file)
    if contents[search]
      puts "Replacing #{search} with #{replace} in #{file}"
      contents.gsub!(search, replace)
      File.open(file, "w") { |f| f << contents }
    end
  end
end

def installed?(gem_name)
  installed_gems = Gem.source_index.find_name(gem_name)
  installed_gems.any?
end

run("mkdir #{project_directory}")
Dir.chdir(project_directory) or fail("Couldn't change to #{project_directory}")
run("git init")
run("git remote add suspenders #{template_url}")
run("git pull suspenders master")

Dir.glob("#{project_directory}/**/*").each do |file|
  search_and_replace(file, changeme, project_name)
end

Dir.glob("#{project_directory}/**/session_store.rb").each do |file|
  datestring = Time.now.strftime("%j %U %w %A %B %d %Y %I %M %S %p %Z")
  search_and_replace(file, changesession, Digest::MD5.hexdigest("#{project_name} #{datestring}"))
end

run("git commit -a -m 'Initial commit'")

# can't vendor nokogiri because it has native extensions
unless installed?("nokogiri")
  run "sudo gem install nokogiri --version='1.3.2'"
end

# need RedCloth installed for clearance generators to run.
unless installed?("RedCloth")
  run "sudo gem install RedCloth --version='4.2.2'"
end

run("script/generate clearance")
run("script/generate clearance_features")
run("script/generate clearance_views")

run("git add .")
run("git commit -m 'installed clearance'")

puts
puts "Now login to github and add a new project named '#{project_name.humanize.titleize}'"

